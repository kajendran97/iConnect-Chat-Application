package iconnect;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ragulravindiran
 */
public class register extends javax.swing.JFrame {

    // create the connection with database
    Connection conn = new dbConnection().connect();

    /**
     * Creates new form register
     *
     */
    public register() {
        initComponents();
        // setting the frame location to the middle
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        imageLogoLbl = new javax.swing.JLabel();
        titleLogoLbl = new javax.swing.JLabel();
        copyrightLbl = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        signUpLogoLbl1 = new javax.swing.JLabel();
        nicknameLbl = new javax.swing.JLabel();
        nickname = new javax.swing.JTextField();
        passwordLbl1 = new javax.swing.JLabel();
        signUpBtn = new javax.swing.JButton();
        loginId1 = new javax.swing.JTextField();
        loginIdLbl1 = new javax.swing.JLabel();
        passwordLbl2 = new javax.swing.JLabel();
        password1 = new javax.swing.JPasswordField();
        confirmPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));

        imageLogoLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconnect/images.png"))); // NOI18N

        titleLogoLbl.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        titleLogoLbl.setForeground(new java.awt.Color(255, 153, 0));
        titleLogoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLogoLbl.setText("#iConnect");

        copyrightLbl.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        copyrightLbl.setForeground(new java.awt.Color(255, 153, 0));
        copyrightLbl.setText("Copyright #iConnect, 2018");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(copyrightLbl))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(titleLogoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(imageLogoLbl)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(imageLogoLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(titleLogoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                .addComponent(copyrightLbl)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        signUpLogoLbl1.setFont(new java.awt.Font("Lucida Grande", 0, 22)); // NOI18N
        signUpLogoLbl1.setForeground(new java.awt.Color(0, 102, 153));
        signUpLogoLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        signUpLogoLbl1.setText("Create Account");

        nicknameLbl.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        nicknameLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nicknameLbl.setText("Nickname : ");

        nickname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        nickname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicknameActionPerformed(evt);
            }
        });
        nickname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nicknameKeyTyped(evt);
            }
        });

        passwordLbl1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        passwordLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordLbl1.setText("Password : ");

        signUpBtn.setText("Sign Up");
        signUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpBtnActionPerformed(evt);
            }
        });

        loginId1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        loginId1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginId1ActionPerformed(evt);
            }
        });
        loginId1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                loginId1KeyTyped(evt);
            }
        });

        loginIdLbl1.setText("Login ID : ");

        passwordLbl2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        passwordLbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordLbl2.setText("Confirm Password : ");

        password1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        password1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                password1KeyTyped(evt);
            }
        });

        confirmPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        confirmPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                confirmPasswordKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(signUpBtn)
                .addGap(74, 74, 74))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nickname, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nicknameLbl)
                            .addComponent(loginIdLbl1)
                            .addComponent(loginId1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLbl1)
                            .addComponent(password1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLbl2)
                            .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(signUpLogoLbl1)))
                .addGap(81, 81, 81))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(signUpLogoLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(nicknameLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nickname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(loginIdLbl1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginId1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordLbl1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(password1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordLbl2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(signUpBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nicknameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicknameActionPerformed
        
    }//GEN-LAST:event_nicknameActionPerformed

    private void loginId1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginId1ActionPerformed
        
    }//GEN-LAST:event_loginId1ActionPerformed

    private void nicknameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicknameKeyTyped
        
    }//GEN-LAST:event_nicknameKeyTyped

    private void loginId1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginId1KeyTyped
        
    }//GEN-LAST:event_loginId1KeyTyped

    private void password1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_password1KeyTyped
        
    }//GEN-LAST:event_password1KeyTyped

    private void confirmPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmPasswordKeyTyped
        
    }//GEN-LAST:event_confirmPasswordKeyTyped

    private void signUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpBtnActionPerformed

        String nick = nickname.getText();
        String login = loginId1.getText();
        String passw = password1.getText();

        try {

            Statement stmt = conn.createStatement();
            
            // checking for existing usernames
            String sqlStatement = "select * from userAccounts where loginID='" + login + "'";

            ResultSet rs = stmt.executeQuery(sqlStatement);

            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "Username is not available...\nTry Again !");
                
                // reset textfileds
                nickname.setText(null);
                loginId1.setText(null);
                password1.setText(null);
                confirmPassword.setText(null);

            } else {

                if (evt.getSource() == signUpBtn) {

                    // check for empty fields
                    if (nickname.getText().equals("") || loginId1.getText().equals("") || password1.getText().equals("") || confirmPassword.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Please fill all the required fileds...!", "Error", JOptionPane.ERROR_MESSAGE);
                    } 
                    // check for matching password
                    else if (!(password1.getText().equals(confirmPassword.getText()))) {
                        JOptionPane.showMessageDialog(null, "Passwords do not match ! \nTry Again.", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {

                        String encrpytedPass = encrpytPaswwordVal(passw, 3);

                        // call signUp() from server
                        signUp(nick, login, encrpytedPass, passw);

                        this.dispose();
                        JOptionPane.showMessageDialog(null, "Account Registered Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                        
                        // direct to login page if registration is successful
                        login ln = new login();
                        ln.setVisible(true);

                    }
                }
            }

        } catch (SQLException ex) {

            Logger.getLogger(register.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_signUpBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(selectThread.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(selectThread.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(selectThread.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(selectThread.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JLabel copyrightLbl;
    private javax.swing.JLabel imageLogoLbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField loginId1;
    private javax.swing.JLabel loginIdLbl1;
    private javax.swing.JTextField nickname;
    private javax.swing.JLabel nicknameLbl;
    private javax.swing.JPasswordField password1;
    private javax.swing.JLabel passwordLbl1;
    private javax.swing.JLabel passwordLbl2;
    private javax.swing.JButton signUpBtn;
    private javax.swing.JLabel signUpLogoLbl1;
    private javax.swing.JLabel titleLogoLbl;
    // End of variables declaration//GEN-END:variables

    private static void signUp(java.lang.String nickname, java.lang.String loginID, java.lang.String pass, java.lang.String confirmPass) {
        iconnect.IConnectChatApp_Service service = new iconnect.IConnectChatApp_Service();
        iconnect.IConnectChatApp port = service.getIConnectChatAppPort();
        port.signUp(nickname, loginID, pass, confirmPass);
    }

    // string value to set encryption
    public static final String strAll = "abcdefghijklmnopqrstuvwxyzy_";

    
    /**
     * method to encrypt password
     * @param conPassw
     * @param key
     * @return 
     */
    private static String encrpytPaswwordVal(String conPassw, int key) {

        conPassw = conPassw.toLowerCase();
        String c = "";
        
        for (int i = 0; i < conPassw.length(); i++) {
            
            int pos = strAll.indexOf(conPassw.charAt(i));
            int keyValue = (pos + key) % 26;
            char repValue = strAll.charAt(keyValue);
            c = c + repValue;
        }
        return c;
    }

}
